.format { .major 0; .minor 0; };
.module { .name "BasicBlocks"; .version 123456789; };

.code @code_main {
    .entry $ENTRY;
    .block $ENTRY () {
        %t0 = const.i s32 1;
        %t1 = const.i s32 3;
        br $BLOCK_1 with %t1;
    };
    .block $BLOCK_1 (%i0, %i1) {
        %t0 = add s32 %i0 and %i1;
        br.if %t0 then $BLOCK_GOOD else $BLOCK_BAD;
    };
    .block $BLOCK_GOOD () {
        %t0 = const.i s32 0;
        ret %t0;
    };
    .block $BLOCK_BAD () {
        %t0 = const.i s32 1;
        ret %t0;
    };
};

.type @class public {
    .name "BasicBlocks";
    .namespace "Example";

    .method @method_main () returns (s32) public {
        .name "Main";
        .body defined @code_main;
    };
};

.entry @method_main;
